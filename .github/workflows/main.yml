name: CI/CD Workflow !!

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs: 
  tests-frontend:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./frontend
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer node.js et configuration du cache
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: ./frontend/package-lock.json

      - name: installer les dépendences
        run: npm ci --prefer-offline 

      - name: vérification du code avec Lint
        run: npm run lint

      - name: vérification (check) des vulnérabilités des dépendances
        run: npm audit fix

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  tests-backend:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./node-api
    steps:
      - name: checkout le code
        uses: actions/checkout@v4

      - name: installer node.js et configuration du cache
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: ./node-api/package-lock.json

      - name: installer les dépendences
        run: npm ci --prefer-offline 

      - name: vérification du code avec Lint
        run: npm run lint

      - name: vérification (check) des vulnérabilités des dépendances
        run: npm audit fix

      - name: exécution des tests unitaires
        run: npm run test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


  build-frontend-and-node-api:
    needs: [tests-frontend, tests-backend]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - context_name: ./frontend
            image_name_ghcr: ghcr.io/magloiredaniel/cicd-projet2-github-action-docker/frontend
            # image_name_hub: danielmedou/github-app/github-app/cicd-projet2-github-action-docker/frontend
          - context_name: ./node-api
            image_name_ghcr: ghcr.io/magloiredaniel/cicd-projet2-github-action-docker/node-app
            # image_name_hub: danielmedou/github-app/cicd-projet2-github-action-docker/node-app
    permissions:
      packages: write
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      -  name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image_name_ghcr }}

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push Docker Hub
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ${{ matrix.context_name }}
      #     push: true
      #     tags: ${{ matrix.image_name_hub }}:latest
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context_name }}
          push: true
          tags: ${{ matrix.image_name_ghcr }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  e2e:
    needs: [build-frontend-and-node-api]
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     browser: ["chrome", "edge", "firefox"]
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: lancement des tests e2e
        run: docker compose up --exit-code-from cypress --abort-on-container-exit

      - name: Nettoyage (clean) des containers qui tournent pour rien
        run: docker compose down -v --remove-orphans

      # - name: Upload coverage reports to Codecov
      #   if: matrix.browser == 'chrome'
      #   uses: codecov/codecov-action@v4.0.1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}